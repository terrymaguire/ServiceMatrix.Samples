//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by ServiceMatrix.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NServiceBus;
using Autofac;
using Autofac.Integration.Mvc;
using System.Reflection;
using ServiceMatrix.Shared;
using System.Web.Mvc;

namespace OnlineSales.ECommerce.Infrastructure
{
    public static class WebGlobalInitialization
    {
        public static IBus InitializeNServiceBus()
        {
		    var builder = new ContainerBuilder();
			builder.RegisterControllers(Assembly.GetExecutingAssembly())
                .PropertiesAutowired(); //this is needed to get property injection working
			
			// Register the sender components 
			builder.RegisterAssemblyTypes(Assembly.GetExecutingAssembly())
                  .Where(t => t.Name.EndsWith("Sender"))
                  .AsImplementedInterfaces()
				  .PropertiesAutowired();
            
			var container = builder.Build();
			Configure.Transactions.Disable();

			var bus = NServiceBus.Configure.With()
                .AutofacBuilder(container) //pass the container in so NSB will use it
                .PurgeOnStartup(true)
                .UnicastBus()
                .RunHandlersUnderIncomingPrincipal(false)
                .CreateBus()
                .Start(() => Configure.Instance.ForInstallationOn<NServiceBus.Installation.Environments.Windows>().Install());
			//tell MVC to resolve via autofac
            DependencyResolver.SetResolver(new AutofacDependencyResolver(container));

            return bus;

        }
    }
}
